{"ast":null,"code":"import _objectWithoutProperties from \"/home/andres/Desktop/www/ticketsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/andres/Desktop/www/ticketsapp/src/features/common/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nvar PrivateRouteComponent = function PrivateRouteComponent(_ref) {\n  var Compo = _ref.component,\n      isLoggedin = _ref.isLoggedin,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isLoggedin\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isLoggedin ? React.createElement(Compo, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nvar mapEstateToProps = function mapEstateToProps(state, ownProps) {\n  return {\n    isLoggedin: state.authService.loginSuccess\n  };\n};\n\nvar PrivateRoute = connect(mapEstateToProps)(PrivateRouteComponent);\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/andres/Desktop/www/ticketsapp/src/features/common/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRouteComponent","Compo","component","isLoggedin","rest","props","pathname","state","from","location","mapEstateToProps","ownProps","authService","loginSuccess","PrivateRoute"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAAcC,KAAd,QAAGC,SAAH;AAAA,MAAqBC,UAArB,QAAqBA,UAArB;AAAA,MAAoCC,IAApC;;AAAA,SAC5B,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,UAAU,GACR,oBAAC,KAAD,oBAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADQ,GAGR,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AADP;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD4B;AAAA,CAA9B;;AAoBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD,EAAQI,QAAR,EAAqB;AAC5C,SAAO;AAAER,IAAAA,UAAU,EAAEI,KAAK,CAACK,WAAN,CAAkBC;AAAhC,GAAP;AACD,CAFD;;AAGA,IAAMC,YAAY,GAAGf,OAAO,CAACW,gBAAD,CAAP,CAA0BV,qBAA1B,CAArB;AACA,eAAec,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRouteComponent = ({ component: Compo, isLoggedin, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isLoggedin ? (\n        <Compo {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }}\n        />\n      )\n    }\n  />\n);\n\nconst mapEstateToProps = (state, ownProps) => {\n  return { isLoggedin: state.authService.loginSuccess };\n};\nconst PrivateRoute = connect(mapEstateToProps)(PrivateRouteComponent);\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}