{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_REQUEST, REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE, LOGIN_GOOGLE_REQUEST, LOGIN_FACEBOOK_REQUEST } from \"./constants\";\nimport { successAlert } from \"./alertActions\";\nimport API from \"../../api\";\n\nvar loginRequest = function loginRequest(user) {\n  return {\n    type: LOGIN_REQUEST,\n    user: user\n  };\n};\n\nvar loginSuccess = function loginSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    user: user\n  };\n};\n\nvar loginFailure = function loginFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    error: error\n  };\n};\n\nvar logoutRequest = function logoutRequest(user) {\n  return {\n    type: LOGOUT_REQUEST,\n    user: user\n  };\n};\n\nvar loginGoogleRequest = function loginGoogleRequest(user) {\n  return {\n    type: LOGIN_GOOGLE_REQUEST,\n    user: user\n  };\n};\n\nvar loginFacebookRequest = function loginFacebookRequest(user) {\n  return {\n    type: LOGIN_FACEBOOK_REQUEST,\n    user: user\n  };\n};\n\nvar registerRequest = function registerRequest(user) {\n  return {\n    type: REGISTER_REQUEST,\n    user: user\n  };\n};\n\nvar registerSuccess = function registerSuccess(user) {\n  return {\n    type: REGISTER_SUCCESS,\n    user: user\n  };\n};\n\nvar registerFailure = function registerFailure(error) {\n  return {\n    type: REGISTER_FAILURE,\n    error: error\n  };\n};\n\nexport var loginFacebook = function loginFacebook(user) {\n  return function (dispatch) {\n    dispatch(loginFacebookRequest(user));\n    return axios.get(\"login/facebook\").then(function (response) {\n      response.ok ? dispatch(loginSuccess(response.user)) : dispatch(loginFailure(response.error.message));\n      dispatch(loginFacebookRequest(null));\n    }).catch(function (error) {\n      dispatch(loginFailure(error));\n    });\n  };\n};\nexport var loginGoogle = function loginGoogle(user) {\n  return function (dispatch) {\n    dispatch(loginGoogleRequest(user));\n    return API.Auth.loginGoogle(user).then(function (response) {\n      console.log(\"response\", response);\n      if (!response.ok) dispatch(loginFailure(response));\n      dispatch(loginSuccess(response.user));\n      API.setToken(response.token);\n      dispatch(loginGoogleRequest(null));\n    }).catch(function (error) {\n      dispatch(loginFailure(error));\n    });\n  };\n};\nexport var login = function login(user) {\n  return function (dispatch) {\n    dispatch(loginRequest(user));\n    return API.Auth.login(user).then(function (response) {\n      if (!response.ok) dispatch(loginFailure(response));\n      dispatch(loginSuccess(response.user));\n      API.setToken(response.token);\n      dispatch(successAlert(\"Welcome back my lord\"));\n      dispatch(loginRequest(null));\n    }).catch(function (error) {\n      \"response\" in error ? dispatch(loginFailure(error.response.data)) : dispatch(loginFailure(error));\n    });\n  };\n};\nexport var register = function register(user) {\n  return function (dispatch) {\n    dispatch(registerRequest(user));\n    return API.Auth.register(user).then(function (response) {\n      response.ok ? dispatch(registerSuccess(user)) : dispatch(registerFailure(response));\n      dispatch(registerRequest(null));\n    }).catch(function (error) {\n      \"data\" in error ? dispatch(registerFailure(error.err)) : dispatch(registerFailure(error));\n    });\n  };\n};\nexport var logout = function logout(user) {\n  return function (dispatch) {\n    dispatch(logoutRequest(user));\n    dispatch(loginSuccess(null));\n  };\n};","map":{"version":3,"sources":["/home/andres/Desktop/www/ticketsapp/src/services/redux/actions/authActions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_GOOGLE_REQUEST","LOGIN_FACEBOOK_REQUEST","successAlert","API","loginRequest","user","type","loginSuccess","loginFailure","error","logoutRequest","loginGoogleRequest","loginFacebookRequest","registerRequest","registerSuccess","registerFailure","loginFacebook","dispatch","get","then","response","ok","message","catch","loginGoogle","Auth","console","log","setToken","token","login","data","register","err","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_REQUEST,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  LOGIN_GOOGLE_REQUEST,\n  LOGIN_FACEBOOK_REQUEST\n} from \"./constants\";\nimport { successAlert } from \"./alertActions\";\nimport API from \"../../api\";\nconst loginRequest = user => ({ type: LOGIN_REQUEST, user });\nconst loginSuccess = user => ({ type: LOGIN_SUCCESS, user });\nconst loginFailure = error => ({ type: LOGIN_FAILURE, error });\n\nconst logoutRequest = user => ({ type: LOGOUT_REQUEST, user });\nconst loginGoogleRequest = user => ({ type: LOGIN_GOOGLE_REQUEST, user });\nconst loginFacebookRequest = user => ({ type: LOGIN_FACEBOOK_REQUEST, user });\n\nconst registerRequest = user => ({ type: REGISTER_REQUEST, user });\nconst registerSuccess = user => ({ type: REGISTER_SUCCESS, user });\nconst registerFailure = error => ({ type: REGISTER_FAILURE, error });\n\nexport const loginFacebook = user => {\n  return dispatch => {\n    dispatch(loginFacebookRequest(user));\n    return axios\n      .get(\"login/facebook\")\n      .then(response => {\n        response.ok\n          ? dispatch(loginSuccess(response.user))\n          : dispatch(loginFailure(response.error.message));\n\n        dispatch(loginFacebookRequest(null));\n      })\n      .catch(error => {\n        dispatch(loginFailure(error));\n      });\n  };\n};\n\nexport const loginGoogle = user => {\n  return dispatch => {\n    dispatch(loginGoogleRequest(user));\n\n    return API.Auth.loginGoogle(user)\n      .then(response => {\n        console.log(\"response\", response);\n        if (!response.ok) dispatch(loginFailure(response));\n        dispatch(loginSuccess(response.user));\n        API.setToken(response.token);\n        dispatch(loginGoogleRequest(null));\n      })\n      .catch(error => {\n        dispatch(loginFailure(error));\n      });\n  };\n};\n\nexport const login = user => {\n  return dispatch => {\n    dispatch(loginRequest(user));\n\n    return API.Auth.login(user)\n      .then(response => {\n        if (!response.ok) dispatch(loginFailure(response));\n        dispatch(loginSuccess(response.user));\n        API.setToken(response.token);\n        dispatch(successAlert(\"Welcome back my lord\"));\n        dispatch(loginRequest(null));\n      })\n      .catch(error => {\n        \"response\" in error\n          ? dispatch(loginFailure(error.response.data))\n          : dispatch(loginFailure(error));\n      });\n  };\n};\n\nexport const register = user => {\n  return dispatch => {\n    dispatch(registerRequest(user));\n\n    return API.Auth.register(user)\n      .then(response => {\n        response.ok\n          ? dispatch(registerSuccess(user))\n          : dispatch(registerFailure(response));\n\n        dispatch(registerRequest(null));\n      })\n      .catch(error => {\n        \"data\" in error\n          ? dispatch(registerFailure(error.err))\n          : dispatch(registerFailure(error));\n      });\n  };\n};\n\nexport const logout = user => {\n  return dispatch => {\n    dispatch(logoutRequest(user));\n    dispatch(loginSuccess(null));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}