{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nvar middlewares = [thunk];\n\nvar devToolsExtension = function devToolsExtension(f) {\n  return f;\n};\n/* istanbul ignore if  */\n\n\nif (process.env.NODE_ENV === 'development') {\n  var _require = require('redux-logger'),\n      createLogger = _require.createLogger;\n\n  var logger = createLogger({\n    collapsed: true\n  });\n  middlewares.push(logger);\n\n  if (window.devToolsExtension) {\n    devToolsExtension = window.devToolsExtension();\n  }\n}\n\nexport default function configureStore() {\n  var store = createStore(rootReducer, {}, compose(applyMiddleware.apply(void 0, middlewares), devToolsExtension));\n  return store;\n}","map":{"version":3,"sources":["/home/andres/Desktop/www/ticketsapp/src/store/configStore.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","middlewares","devToolsExtension","f","process","env","NODE_ENV","require","createLogger","logger","collapsed","push","window","configureStore","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,WAAW,GAAG,CAACF,KAAD,CAApB;;AAEA,IAAIG,iBAAiB,GAAG,2BAACC,CAAD;AAAA,SAAOA,CAAP;AAAA,CAAxB;AAEA;;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAAA,iBACnBC,OAAO,CAAC,cAAD,CADY;AAAA,MACnCC,YADmC,YACnCA,YADmC;;AAG1C,MAAMC,MAAM,GAAGD,YAAY,CAAC;AAACE,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAA3B;AACAT,EAAAA,WAAW,CAACU,IAAZ,CAAiBF,MAAjB;;AAEA,MAAIG,MAAM,CAACV,iBAAX,EAA8B;AAC5BA,IAAAA,iBAAiB,GAAGU,MAAM,CAACV,iBAAP,EAApB;AACD;AACF;;AAED,eAAe,SAASW,cAAT,GAA0B;AACvC,MAAMC,KAAK,GAAGlB,WAAW,CACrBI,WADqB,EAErB,EAFqB,EAGrBF,OAAO,CACHD,eAAe,MAAf,SAAmBI,WAAnB,CADG,EAEHC,iBAFG,CAHc,CAAzB;AASA,SAAOY,KAAP;AACD","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst middlewares = [thunk];\n\nlet devToolsExtension = (f) => f;\n\n/* istanbul ignore if  */\nif (process.env.NODE_ENV === 'development') {\n  const {createLogger} = require('redux-logger');\n\n  const logger = createLogger({collapsed: true});\n  middlewares.push(logger);\n\n  if (window.devToolsExtension) {\n    devToolsExtension = window.devToolsExtension();\n  }\n}\n\nexport default function configureStore() {\n  const store = createStore(\n      rootReducer,\n      {},\n      compose(\n          applyMiddleware(...middlewares),\n          devToolsExtension\n      )\n  );\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}