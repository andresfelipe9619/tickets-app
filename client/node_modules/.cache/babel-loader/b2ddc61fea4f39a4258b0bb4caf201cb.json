{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @react-settings-pane\n *\n * @copyright Dennis StÃ¼cken\n * @licence MIT\n */\n\n\nvar MenuItem = function (_Component) {\n  _inherits(MenuItem, _Component);\n\n  function MenuItem(props) {\n    _classCallCheck(this, MenuItem);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuItem).call(this, props));\n\n    _this._clicked = _this.clicked.bind(_this);\n    return _this;\n  }\n  /**\n   * MenuItem was clicked\n   *\n   * @param ev\n   */\n\n\n  _createClass(MenuItem, [{\n    key: 'clicked',\n    value: function clicked(ev) {\n      ev.preventDefault(); // If this is not a left click\n\n      if (ev.button !== 0) {\n        return;\n      }\n\n      if (this.props.onMenuItemClick) {\n        this.props.onMenuItemClick(this.props.item);\n      }\n\n      this.props.switchContent(this.props.item);\n    }\n    /**\n     * Render this component\n     *\n     * @returns {XML}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props$item = this.props.item;\n      var title = _props$item.title;\n      var url = _props$item.url;\n      var itemsClassName = this.props.active ? 'menu-item active' : 'menu-item';\n      return _react2.default.createElement('li', {\n        title: title,\n        className: itemsClassName\n      }, _react2.default.createElement('a', {\n        href: url,\n        onClick: this._clicked\n      }, title));\n    }\n  }]);\n\n  return MenuItem;\n}(_react.Component);\n\nMenuItem.propTypes = {\n  item: _react.PropTypes.object.isRequired,\n  switchContent: _react.PropTypes.func.isRequired,\n  onMenuItemClick: _react.PropTypes.func\n};\nexports.default = MenuItem;","map":null,"metadata":{},"sourceType":"script"}