{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettingsContent = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _SettingsFooter = require('./SettingsFooter');\n\nvar _SettingsFooter2 = _interopRequireDefault(_SettingsFooter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @react-settings-pane\n *\n * @copyright Dennis StÃ¼cken\n * @licence MIT\n */\n\n\nvar SettingsContent = exports.SettingsContent = function (_Component) {\n  _inherits(SettingsContent, _Component);\n\n  function SettingsContent() {\n    _classCallCheck(this, SettingsContent);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(SettingsContent).apply(this, arguments));\n  }\n\n  _createClass(SettingsContent, [{\n    key: 'renderPage',\n\n    /**\n     * Renders a page that is defined as a handler for 'url'.\n     *\n     * @param url\n     * @returns array\n     */\n    value: function renderPage(url) {\n      var _this2 = this;\n\n      var page = [];\n\n      if (url) {\n        // Search for a matching url handler\n        page = _react.Children.map(this.props.children, function (child) {\n          if (child.props.handler && child.props.handler === url) {\n            return _react2.default.cloneElement(child, {\n              settings: _this2.props.settings,\n              onChange: _this2.props.onChange,\n              onPaneLeave: _this2.props.onPaneLeave,\n              onMenuItemClick: _this2.props.onMenuItemClick,\n              currentPage: _this2.props.currentPage\n            });\n          }\n        });\n      } // There was no page found, so show a page not defined message\n\n\n      if (page.length === 0) {\n        page = [_react2.default.createElement('div', {\n          key: 'settingsEmptyMessage',\n          className: 'empty-message'\n        }, _react2.default.createElement('p', null, 'Page not defined'))];\n      }\n\n      return page;\n    }\n    /**\n     * Main renderer\n     *\n     * @returns {XML}\n     */\n\n    /**\n     * PropTypes\n     *\n     * @type {{currentPage: *, items: *, currentPage: *, settings: object, onChange: *, switchContent: *, onPaneLeave: *, onMenuItemClick: *}}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var page = this.props.currentPage ? this.props.currentPage : '',\n          header = '';\n\n      if (this.props.header) {\n        if (this.props.header === true) {\n          var currentItem = this.props.items.reduce(function (prev, item) {\n            return item.url === page ? item : prev;\n          });\n          header = _react2.default.createElement('div', {\n            className: 'headline'\n          }, _react2.default.createElement('h3', null, currentItem.title));\n        } else {\n          header = this.props.header;\n        }\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'settings-content'\n      }, header, _react2.default.createElement('div', {\n        className: 'settings-page'\n      }, _react2.default.createElement('div', {\n        className: 'scroller-wrap'\n      }, this.renderPage(page))), _react2.default.createElement(_SettingsFooter2.default, this.props));\n    }\n  }]);\n\n  return SettingsContent;\n}(_react.Component);\n\nSettingsContent.propTypes = {\n  currentPage: _react.PropTypes.string,\n  header: _react.PropTypes.bool,\n  items: _react.PropTypes.array,\n  settings: _react.PropTypes.object,\n  onChange: _react.PropTypes.func,\n  switchContent: _react.PropTypes.func,\n  onPaneLeave: _react.PropTypes.func,\n  onMenuItemClick: _react.PropTypes.func\n};\nexports.default = SettingsContent;","map":null,"metadata":{},"sourceType":"script"}